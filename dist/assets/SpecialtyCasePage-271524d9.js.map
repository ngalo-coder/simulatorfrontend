{"version":3,"file":"SpecialtyCasePage-271524d9.js","sources":["../../src/hooks/useOptimizedSpecialtyPage.ts","../../src/components/Breadcrumb.tsx","../../src/components/SpecialtyNavigation.tsx","../../src/components/SpecialtyHeader.tsx","../../src/pages/SpecialtyCasePage.tsx"],"sourcesContent":["/**\r\n * Optimized hook for specialty page to prevent unnecessary re-renders\r\n * Implements memoization and performance optimizations\r\n */\r\n\r\nimport { useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { api } from '../services/apiService';\r\nimport { slugToSpecialty, isValidSpecialtySlug } from '../utils/urlUtils';\r\nimport { useNotification } from '../components/NotificationToast';\r\nimport { specialtyCache } from '../utils/specialtyCache';\r\nimport { trackPageLoad, trackApiCall, trackComponentRender } from '../utils/performanceMonitor';\r\n\r\ninterface Case {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  specialty?: string;\r\n  patient_age?: number;\r\n  patient_gender?: string;\r\n  chief_complaint?: string;\r\n}\r\n\r\ninterface CaseFilters {\r\n  search: string;\r\n  patient_age_min?: number;\r\n  patient_age_max?: number;\r\n  patient_gender?: string;\r\n  page: number;\r\n  limit: number;\r\n}\r\n\r\ninterface CasesResponse {\r\n  cases: Case[];\r\n  currentPage: number;\r\n  totalPages: number;\r\n  totalCases: number;\r\n  hasNextPage: boolean;\r\n  hasPrevPage: boolean;\r\n}\r\n\r\ninterface UseOptimizedSpecialtyPageReturn {\r\n  // State\r\n  cases: Case[];\r\n  loading: boolean;\r\n  error: string | null;\r\n  specialtyName: string;\r\n  filters: CaseFilters;\r\n  casesResponse: CasesResponse;\r\n  startingSimulation: boolean;\r\n  \r\n  // Actions\r\n  handleFilterChange: (newFilters: Partial<CaseFilters>) => void;\r\n  handlePageChange: (newPage: number) => void;\r\n  clearAllFilters: () => void;\r\n  hasActiveFilters: () => boolean;\r\n  handleStartSimulation: (case_: Case) => Promise<void>;\r\n  retryFetch: () => void;\r\n}\r\n\r\n/**\r\n * Optimized hook for specialty page functionality\r\n */\r\nexport const useOptimizedSpecialtyPage = (): UseOptimizedSpecialtyPageReturn => {\r\n  const { specialty: specialtySlug } = useParams<{ specialty: string }>();\r\n  const { addNotification } = useNotification();\r\n  \r\n  // Performance tracking\r\n  const pageLoadEndRef = useRef<(() => void) | null>(null);\r\n  \r\n  // Refs to prevent unnecessary re-renders\r\n  const abortControllerRef = useRef<AbortController | null>(null);\r\n  const lastFetchParamsRef = useRef<string>('');\r\n  \r\n  // Track component renders\r\n  useEffect(() => {\r\n    trackComponentRender('SpecialtyPage');\r\n  });\r\n  \r\n  // State\r\n  const [cases, setCases] = useState<Case[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [startingSimulation, setStartingSimulation] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  // Memoized specialty name to prevent recalculation\r\n  const specialtyName = useMemo(() => {\r\n    if (!specialtySlug) return '';\r\n    \r\n    // Use cached conversion for better performance\r\n    const cached = specialtyCache.getSpecialtyFromSlug(specialtySlug);\r\n    return cached || slugToSpecialty(specialtySlug);\r\n  }, [specialtySlug]);\r\n  \r\n  // Optimized filters state with memoization\r\n  const [filters, setFilters] = useState<CaseFilters>({\r\n    search: '',\r\n    patient_age_min: undefined,\r\n    patient_age_max: undefined,\r\n    patient_gender: '',\r\n    page: 1,\r\n    limit: 12\r\n  });\r\n  \r\n  const [casesResponse, setCasesResponse] = useState<CasesResponse>({\r\n    cases: [],\r\n    currentPage: 1,\r\n    totalPages: 1,\r\n    totalCases: 0,\r\n    hasNextPage: false,\r\n    hasPrevPage: false\r\n  });\r\n\r\n  // Memoized filter change handler to prevent re-renders\r\n  const handleFilterChange = useCallback((newFilters: Partial<CaseFilters>) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      ...newFilters,\r\n      page: 1 // Reset to first page when filters change\r\n    }));\r\n  }, []);\r\n\r\n  // Memoized page change handler\r\n  const handlePageChange = useCallback((newPage: number) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      page: newPage\r\n    }));\r\n  }, []);\r\n\r\n  // Memoized clear filters function\r\n  const clearAllFilters = useCallback(() => {\r\n    setFilters({\r\n      search: '',\r\n      patient_age_min: undefined,\r\n      patient_age_max: undefined,\r\n      patient_gender: '',\r\n      page: 1,\r\n      limit: 12\r\n    });\r\n  }, []);\r\n\r\n  // Memoized active filters check\r\n  const hasActiveFilters = useCallback((): boolean => {\r\n    return !!(filters.search || \r\n             filters.patient_age_min !== undefined || \r\n             filters.patient_age_max !== undefined || \r\n             filters.patient_gender);\r\n  }, [filters.search, filters.patient_age_min, filters.patient_age_max, filters.patient_gender]);\r\n\r\n  // Optimized fetch function with request deduplication\r\n  const fetchSpecialtyCases = useCallback(async (showNotification: boolean = true) => {\r\n    const endApiCall = trackApiCall('getCases');\r\n    \r\n    try {\r\n      // Validate specialty slug\r\n      if (!specialtySlug || !isValidSpecialtySlug(specialtySlug)) {\r\n        setError('Invalid specialty URL');\r\n        setLoading(false);\r\n        endApiCall();\r\n        return;\r\n      }\r\n\r\n      // Cancel previous request if still pending\r\n      if (abortControllerRef.current) {\r\n        abortControllerRef.current.abort();\r\n      }\r\n\r\n      // Create new abort controller\r\n      abortControllerRef.current = new AbortController();\r\n\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Build comprehensive filter object\r\n      const apiFilters = {\r\n        specialty: specialtyName,\r\n        search: filters.search,\r\n        patient_age_min: filters.patient_age_min,\r\n        patient_age_max: filters.patient_age_max,\r\n        patient_gender: filters.patient_gender,\r\n        page: filters.page,\r\n        limit: filters.limit\r\n      };\r\n\r\n      // Create cache key for request deduplication\r\n      const cacheKey = JSON.stringify(apiFilters);\r\n      \r\n      // Skip if same request is already in progress\r\n      if (cacheKey === lastFetchParamsRef.current && loading) {\r\n        return;\r\n      }\r\n      \r\n      lastFetchParamsRef.current = cacheKey;\r\n\r\n      // Remove undefined values\r\n      const cleanFilters = Object.fromEntries(\r\n        Object.entries(apiFilters).filter(([_, value]) => value !== undefined && value !== '')\r\n      );\r\n\r\n      const response = await api.getCases(cleanFilters);\r\n      endApiCall();\r\n      \r\n      // Check if request was aborted\r\n      if (abortControllerRef.current?.signal.aborted) {\r\n        return;\r\n      }\r\n      \r\n      if (response && response.cases && Array.isArray(response.cases)) {\r\n        setCases(response.cases);\r\n        setCasesResponse({\r\n          cases: response.cases,\r\n          currentPage: response.currentPage || filters.page,\r\n          totalPages: response.totalPages || 1,\r\n          totalCases: response.totalCases || response.cases.length,\r\n          hasNextPage: response.hasNextPage || false,\r\n          hasPrevPage: response.hasPrevPage || false\r\n        });\r\n      } else {\r\n        setCases([]);\r\n        setCasesResponse({\r\n          cases: [],\r\n          currentPage: 1,\r\n          totalPages: 1,\r\n          totalCases: 0,\r\n          hasNextPage: false,\r\n          hasPrevPage: false\r\n        });\r\n        setError('Invalid response format');\r\n        if (showNotification) {\r\n          addNotification('Received invalid data from server. Please try again.', 'error');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      endApiCall();\r\n      \r\n      // Don't show error if request was aborted\r\n      if (error instanceof Error && error.name === 'AbortError') {\r\n        return;\r\n      }\r\n      \r\n      console.error('Error fetching specialty cases:', error);\r\n      setError('Failed to load cases');\r\n      setCases([]);\r\n      setCasesResponse({\r\n        cases: [],\r\n        currentPage: 1,\r\n        totalPages: 1,\r\n        totalCases: 0,\r\n        hasNextPage: false,\r\n        hasPrevPage: false\r\n      });\r\n      \r\n      if (showNotification) {\r\n        addNotification('Failed to load cases. Please try again.', 'error');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n      abortControllerRef.current = null;\r\n      \r\n      // End page load tracking on first successful load\r\n      if (pageLoadEndRef.current) {\r\n        pageLoadEndRef.current();\r\n        pageLoadEndRef.current = null;\r\n      }\r\n    }\r\n  }, [specialtySlug, specialtyName, filters, loading, addNotification]);\r\n\r\n  // Optimized simulation start handler\r\n  const handleStartSimulation = useCallback(async (case_: Case) => {\r\n    try {\r\n      setStartingSimulation(true);\r\n      const response = await api.startSimulation(case_.id);\r\n      \r\n      // Handle navigation logic here or return response for parent to handle\r\n      addNotification(`Starting simulation for \"${case_.title}\"`, 'success');\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      console.error('Error starting simulation:', error);\r\n      addNotification('Failed to start simulation. Please try again.', 'error');\r\n      throw error;\r\n    } finally {\r\n      setStartingSimulation(false);\r\n    }\r\n  }, [addNotification]);\r\n\r\n  // Retry function\r\n  const retryFetch = useCallback(() => {\r\n    fetchSpecialtyCases(true);\r\n  }, [fetchSpecialtyCases]);\r\n\r\n  // Effect for initial load and filter changes\r\n  useEffect(() => {\r\n    // Start page load tracking\r\n    if (!pageLoadEndRef.current) {\r\n      pageLoadEndRef.current = trackPageLoad(`specialty_${specialtyName}`);\r\n    }\r\n    \r\n    fetchSpecialtyCases();\r\n  }, [specialtySlug, specialtyName]);\r\n\r\n  // Effect for filter changes (debounced)\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (!loading) {\r\n        fetchSpecialtyCases(false);\r\n      }\r\n    }, 300); // 300ms debounce for filter changes\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [filters, fetchSpecialtyCases, loading]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (abortControllerRef.current) {\r\n        abortControllerRef.current.abort();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    // State\r\n    cases,\r\n    loading,\r\n    error,\r\n    specialtyName,\r\n    filters,\r\n    casesResponse,\r\n    startingSimulation,\r\n    \r\n    // Actions\r\n    handleFilterChange,\r\n    handlePageChange,\r\n    clearAllFilters,\r\n    hasActiveFilters,\r\n    handleStartSimulation,\r\n    retryFetch,\r\n  };\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface BreadcrumbItem {\r\n  label: string;\r\n  href?: string;\r\n  isActive?: boolean;\r\n}\r\n\r\ninterface BreadcrumbProps {\r\n  items: BreadcrumbItem[];\r\n  className?: string;\r\n}\r\n\r\n/**\r\n * Breadcrumb navigation component\r\n * Shows navigation trail: Home → Specialty → Cases\r\n */\r\nconst Breadcrumb: React.FC<BreadcrumbProps> = ({ items, className = '' }) => {\r\n  if (!items || items.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <nav \r\n      className={`flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400 ${className}`}\r\n      aria-label=\"Breadcrumb navigation\"\r\n    >\r\n      {items.map((item, index) => (\r\n        <React.Fragment key={index}>\r\n          {index > 0 && (\r\n            <span \r\n              className=\"text-gray-400 dark:text-gray-500 select-none\" \r\n              aria-hidden=\"true\"\r\n            >\r\n              →\r\n            </span>\r\n          )}\r\n          \r\n          {item.href && !item.isActive ? (\r\n            <Link\r\n              to={item.href}\r\n              className=\"hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 rounded px-1\"\r\n              aria-current={item.isActive ? 'page' : undefined}\r\n            >\r\n              {item.label}\r\n            </Link>\r\n          ) : (\r\n            <span \r\n              className={`${\r\n                item.isActive \r\n                  ? 'font-semibold text-blue-600 dark:text-blue-400' \r\n                  : 'text-gray-500 dark:text-gray-400'\r\n              }`}\r\n              aria-current={item.isActive ? 'page' : undefined}\r\n            >\r\n              {item.label}\r\n            </span>\r\n          )}\r\n        </React.Fragment>\r\n      ))}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSpecialtyContext } from '../hooks/useSpecialtyContext';\r\n\r\ninterface SpecialtyNavigationProps {\r\n  className?: string;\r\n  showCaseCounts?: boolean;\r\n  maxVisible?: number;\r\n}\r\n\r\n/**\r\n * Specialty navigation component\r\n * Provides navigation links to switch between specialties\r\n */\r\nconst SpecialtyNavigation: React.FC<SpecialtyNavigationProps> = ({ \r\n  className = '',\r\n  showCaseCounts = true,\r\n  maxVisible = 6\r\n}) => {\r\n  const { \r\n    specialtyRoutes, \r\n    loading, \r\n    error \r\n  } = useSpecialtyContext();\r\n  \r\n  const [showAll, setShowAll] = useState(false);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={`animate-pulse ${className}`}>\r\n        <div className=\"flex flex-wrap gap-2\">\r\n          {[...Array(4)].map((_, i) => (\r\n            <div key={i} className=\"h-8 bg-gray-200 dark:bg-gray-700 rounded-lg w-24\"></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || specialtyRoutes.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const visibleRoutes = showAll ? specialtyRoutes : specialtyRoutes.slice(0, maxVisible);\r\n  const hasMore = specialtyRoutes.length > maxVisible;\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"flex flex-wrap gap-2 items-center\">\r\n        {visibleRoutes.map((route) => (\r\n          <Link\r\n            key={route.slug}\r\n            to={`/${route.slug}`}\r\n            className={`\r\n              inline-flex items-center px-3 py-1.5 rounded-lg text-sm font-medium transition-all duration-200\r\n              ${route.isActive\r\n                ? 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 border border-blue-200 dark:border-blue-700'\r\n                : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-600 hover:border-blue-300 dark:hover:border-blue-600 hover:text-blue-600 dark:hover:text-blue-400'\r\n              }\r\n              focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1\r\n            `}\r\n            aria-current={route.isActive ? 'page' : undefined}\r\n          >\r\n            <span>{route.specialty}</span>\r\n            {showCaseCounts && route.caseCount > 0 && (\r\n              <span className={`\r\n                ml-2 px-1.5 py-0.5 text-xs rounded-full\r\n                ${route.isActive\r\n                  ? 'bg-blue-200 dark:bg-blue-800 text-blue-700 dark:text-blue-300'\r\n                  : 'bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400'\r\n                }\r\n              `}>\r\n                {route.caseCount}\r\n              </span>\r\n            )}\r\n          </Link>\r\n        ))}\r\n        \r\n        {hasMore && (\r\n          <button\r\n            onClick={() => setShowAll(!showAll)}\r\n            className=\"inline-flex items-center px-3 py-1.5 rounded-lg text-sm font-medium bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1\"\r\n          >\r\n            {showAll ? (\r\n              <>\r\n                <span>Show Less</span>\r\n                <svg className=\"ml-1 w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 15l7-7 7 7\" />\r\n                </svg>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span>+{specialtyRoutes.length - maxVisible} More</span>\r\n                <svg className=\"ml-1 w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\r\n                </svg>\r\n              </>\r\n            )}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecialtyNavigation;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Breadcrumb, { BreadcrumbItem } from './Breadcrumb';\r\nimport SpecialtyNavigation from './SpecialtyNavigation';\r\nimport { useSpecialtyContext } from '../hooks/useSpecialtyContext';\r\n\r\ninterface SpecialtyHeaderProps {\r\n  specialtyName: string;\r\n  specialtySlug: string;\r\n  caseCount?: number;\r\n  showNavigation?: boolean;\r\n  showBreadcrumbs?: boolean;\r\n  className?: string;\r\n}\r\n\r\n/**\r\n * Specialty page header component\r\n * Shows specialty name, breadcrumbs, and navigation between specialties\r\n */\r\nconst SpecialtyHeader: React.FC<SpecialtyHeaderProps> = ({\r\n  specialtyName,\r\n  specialtySlug,\r\n  caseCount,\r\n  showNavigation = true,\r\n  showBreadcrumbs = true,\r\n  className = ''\r\n}) => {\r\n  const { specialtyRoutes } = useSpecialtyContext();\r\n  \r\n  // Find current specialty route to get case count if not provided\r\n  const currentRoute = specialtyRoutes.find(route => route.slug === specialtySlug);\r\n  const displayCaseCount = caseCount ?? currentRoute?.caseCount ?? 0;\r\n\r\n  // Build breadcrumb items\r\n  const breadcrumbItems: BreadcrumbItem[] = [\r\n    {\r\n      label: 'Home',\r\n      href: '/dashboard'\r\n    },\r\n    {\r\n      label: 'Browse Cases',\r\n      href: '/browse-cases'\r\n    },\r\n    {\r\n      label: specialtyName,\r\n      isActive: true\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className={`space-y-6 ${className}`}>\r\n      {/* Breadcrumb Navigation */}\r\n      {showBreadcrumbs && (\r\n        <Breadcrumb items={breadcrumbItems} />\r\n      )}\r\n\r\n      {/* Header Section */}\r\n      <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n        <div className=\"flex-1\">\r\n          <div className=\"flex items-center space-x-3 mb-2\">\r\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\r\n              {specialtyName} Cases\r\n            </h1>\r\n            <span className=\"px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-sm rounded-full font-medium\">\r\n              Specialty\r\n            </span>\r\n            {displayCaseCount > 0 && (\r\n              <span className=\"px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 text-sm rounded-full\">\r\n                {displayCaseCount} case{displayCaseCount !== 1 ? 's' : ''}\r\n              </span>\r\n            )}\r\n          </div>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">\r\n            Explore and practice cases specifically in {specialtyName}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Quick Actions */}\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Link \r\n            to=\"/browse-cases\"\r\n            className=\"inline-flex items-center text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 text-sm font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 rounded px-2 py-1\"\r\n          >\r\n            <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\r\n            </svg>\r\n            Browse Specialties\r\n          </Link>\r\n          \r\n          <Link \r\n            to=\"/simulation\"\r\n            className=\"inline-flex items-center px-3 py-1.5 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1\"\r\n          >\r\n            All Cases\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Specialty Navigation */}\r\n      {showNavigation && specialtyRoutes.length > 1 && (\r\n        <div>\r\n          <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n            Switch Specialty:\r\n          </h3>\r\n          <SpecialtyNavigation \r\n            showCaseCounts={true}\r\n            maxVisible={5}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecialtyHeader;","import React, { memo } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { useOptimizedSpecialtyPage } from '../hooks/useOptimizedSpecialtyPage';\r\nimport { useSpecialtyContext } from '../hooks/useSpecialtyContext';\r\nimport SpecialtyHeader from '../components/SpecialtyHeader';\r\nimport { SkeletonSpecialtyPage } from '../components/SkeletonLoader';\r\n\r\ninterface Case {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  specialty?: string;\r\n  patient_age?: number;\r\n  patient_gender?: string;\r\n  chief_complaint?: string;\r\n}\r\n\r\nconst SpecialtyCasePage: React.FC = memo(() => {\r\n  const navigate = useNavigate();\r\n  const { } = useSpecialtyContext();\r\n  \r\n  // Use optimized hook for better performance\r\n  const {\r\n    cases,\r\n    loading,\r\n    error,\r\n    specialtyName,\r\n    filters,\r\n    casesResponse,\r\n    startingSimulation,\r\n    handleFilterChange,\r\n    handlePageChange,\r\n    clearAllFilters,\r\n    hasActiveFilters,\r\n    handleStartSimulation: optimizedStartSimulation,\r\n    retryFetch,\r\n  } = useOptimizedSpecialtyPage();\r\n  \r\n  // State for UI\r\n  const [showAdvancedFilters, setShowAdvancedFilters] = React.useState(false);\r\n  const [retryCount, setRetryCount] = React.useState(0);\r\n\r\n\r\n\r\n  // Enhanced simulation start handler with specialty context\r\n  const handleStartSimulation = React.useCallback(async (case_: Case) => {\r\n    try {\r\n      await optimizedStartSimulation(case_);\r\n      \r\n      // Navigate to simulation interface, preserving specialty context\r\n      navigate(`/simulation/${case_.id}`, {\r\n        state: {\r\n          specialtyContext: {\r\n            specialty: specialtyName,\r\n            specialtySlug: specialtyName.toLowerCase().replace(/\\s+/g, '_'),\r\n            returnUrl: `/${specialtyName.toLowerCase().replace(/\\s+/g, '_')}`\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      // Error handling is done in the optimized hook\r\n      console.error('Navigation error:', error);\r\n    }\r\n  }, [optimizedStartSimulation, navigate, specialtyName]);\r\n\r\n  // Show skeleton loading state\r\n  if (loading && !cases.length) {\r\n    return <SkeletonSpecialtyPage />;\r\n  }\r\n\r\n  // Handle error states\r\n  if (error === 'Invalid specialty URL') {\r\n    return (\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\r\n          <div className=\"text-6xl mb-4\">❌</div>\r\n          <h2 className=\"text-2xl font-semibold text-gray-900 mb-2\">\r\n            Invalid Specialty URL\r\n          </h2>\r\n          <p className=\"text-gray-600 mb-6\">\r\n            The specialty URL you're trying to access is not valid.\r\n          </p>\r\n          <div className=\"flex justify-center space-x-4\">\r\n            <Link\r\n              to=\"/browse-cases\"\r\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Browse Specialties\r\n            </Link>\r\n            <Link\r\n              to=\"/simulation\"\r\n              className=\"bg-gray-600 text-white px-6 py-2 rounded-lg hover:bg-gray-700 transition-colors\"\r\n            >\r\n              All Cases\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error === 'Specialty not found') {\r\n    return (\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\r\n          <div className=\"text-6xl mb-4\">🔍</div>\r\n          <h2 className=\"text-2xl font-semibold text-gray-900 mb-2\">\r\n            Specialty Not Found\r\n          </h2>\r\n          <p className=\"text-gray-600 mb-2\">\r\n            The specialty \"{specialtyName}\" was not found.\r\n          </p>\r\n          <p className=\"text-sm text-gray-500 mb-6\">\r\n            This specialty may not exist or may not have any cases available.\r\n          </p>\r\n          <div className=\"flex justify-center space-x-4\">\r\n            <Link\r\n              to=\"/browse-cases\"\r\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Browse Available Specialties\r\n            </Link>\r\n            <Link\r\n              to=\"/simulation\"\r\n              className=\"bg-gray-600 text-white px-6 py-2 rounded-lg hover:bg-gray-700 transition-colors\"\r\n            >\r\n              View All Cases\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto\">\r\n      {/* Specialty Header with breadcrumbs and navigation */}\r\n      <SpecialtyHeader \r\n        specialtyName={specialtyName}\r\n        specialtySlug={specialtyName.toLowerCase().replace(/\\s+/g, '_')}\r\n        showNavigation={true}\r\n        showBreadcrumbs={true}\r\n        className=\"mb-8\"\r\n      />\r\n\r\n      {/* Search and Filtering */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow-md mb-6\">\r\n        {/* Basic Search */}\r\n        <div className=\"flex items-center space-x-4 mb-4\">\r\n          <div className=\"flex-1\">\r\n            <input\r\n              type=\"text\"\r\n              value={filters.search}\r\n              onChange={(e) => handleFilterChange({ search: e.target.value })}\r\n              placeholder={`Search within ${specialtyName} cases...`}\r\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={() => setShowAdvancedFilters(!showAdvancedFilters)}\r\n            className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${\r\n              showAdvancedFilters \r\n                ? 'bg-blue-600 text-white' \r\n                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n            }`}\r\n          >\r\n            {showAdvancedFilters ? 'Hide Filters' : 'More Filters'}\r\n          </button>\r\n          {hasActiveFilters() && (\r\n            <button\r\n              onClick={clearAllFilters}\r\n              className=\"px-3 py-2 text-gray-600 hover:text-gray-800 text-sm\"\r\n            >\r\n              Clear All\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Advanced Filters */}\r\n        {showAdvancedFilters && (\r\n          <div className=\"border-t pt-4\">\r\n            <div className=\"grid md:grid-cols-3 gap-4\">\r\n              {/* Patient Gender Filter */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Patient Gender\r\n                </label>\r\n                <select\r\n                  value={filters.patient_gender}\r\n                  onChange={(e) => handleFilterChange({ patient_gender: e.target.value })}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  <option value=\"\">All Genders</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </select>\r\n              </div>\r\n\r\n              {/* Patient Age Range */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Min Age\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={filters.patient_age_min || ''}\r\n                  onChange={(e) => handleFilterChange({ \r\n                    patient_age_min: e.target.value ? parseInt(e.target.value) : undefined \r\n                  })}\r\n                  placeholder=\"Min age\"\r\n                  min=\"0\"\r\n                  max=\"120\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Max Age\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  value={filters.patient_age_max || ''}\r\n                  onChange={(e) => handleFilterChange({ \r\n                    patient_age_max: e.target.value ? parseInt(e.target.value) : undefined \r\n                  })}\r\n                  placeholder=\"Max age\"\r\n                  min=\"0\"\r\n                  max=\"120\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Active Filters Summary */}\r\n            {hasActiveFilters() && (\r\n              <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    <span className=\"text-sm text-blue-800 font-medium\">Active filters:</span>\r\n                    {filters.search && (\r\n                      <span className=\"px-2 py-1 bg-blue-200 text-blue-800 text-xs rounded-full\">\r\n                        Search: \"{filters.search}\"\r\n                      </span>\r\n                    )}\r\n                    {filters.patient_gender && (\r\n                      <span className=\"px-2 py-1 bg-blue-200 text-blue-800 text-xs rounded-full\">\r\n                        Gender: {filters.patient_gender}\r\n                      </span>\r\n                    )}\r\n                    {(filters.patient_age_min !== undefined || filters.patient_age_max !== undefined) && (\r\n                      <span className=\"px-2 py-1 bg-blue-200 text-blue-800 text-xs rounded-full\">\r\n                        Age: {filters.patient_age_min || 0}-{filters.patient_age_max || '∞'}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Cases Grid */}\r\n      {loading && cases.length === 0 ? (\r\n        <SkeletonSpecialtyPage />\r\n      ) : error === 'Failed to load cases' ? (\r\n        <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\r\n          <div className=\"text-6xl mb-4\">⚠️</div>\r\n          <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n            Failed to Load Cases\r\n          </h3>\r\n          <p className=\"text-gray-600 mb-2\">\r\n            There was an error loading the {specialtyName} cases.\r\n          </p>\r\n          {retryCount > 0 && (\r\n            <p className=\"text-sm text-gray-500 mb-4\">\r\n              Retry attempt: {retryCount}/3\r\n            </p>\r\n          )}\r\n          <p className=\"text-gray-600 mb-6\">\r\n            Please check your internet connection and try again.\r\n          </p>\r\n          <div className=\"flex justify-center space-x-3\">\r\n            <button\r\n              onClick={() => {\r\n                setRetryCount(prev => prev + 1);\r\n                retryFetch();\r\n              }}\r\n              disabled={retryCount >= 3}\r\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {retryCount >= 3 ? 'Max Retries Reached' : 'Retry'}\r\n            </button>\r\n            <Link\r\n              to=\"/browse-cases\"\r\n              className=\"bg-gray-600 text-white px-6 py-2 rounded-lg hover:bg-gray-700 transition-colors\"\r\n            >\r\n              Browse Other Specialties\r\n            </Link>\r\n            <Link\r\n              to=\"/simulation\"\r\n              className=\"bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors\"\r\n            >\r\n              View All Cases\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : error === 'Invalid response format' ? (\r\n        <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\r\n          <div className=\"text-6xl mb-4\">🔧</div>\r\n          <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n            Data Format Error\r\n          </h3>\r\n          <p className=\"text-gray-600 mb-4\">\r\n            The server returned data in an unexpected format. This might be a temporary issue.\r\n          </p>\r\n          <div className=\"flex justify-center space-x-3\">\r\n            <button\r\n              onClick={() => {\r\n                setRetryCount(prev => prev + 1);\r\n                retryFetch();\r\n              }}\r\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Try Again\r\n            </button>\r\n            <Link\r\n              to=\"/browse-cases\"\r\n              className=\"bg-gray-600 text-white px-6 py-2 rounded-lg hover:bg-gray-700 transition-colors\"\r\n            >\r\n              Browse Specialties\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : cases.length === 0 ? (\r\n        <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\r\n          <div className=\"text-6xl mb-4\">📚</div>\r\n          <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n            {hasActiveFilters() ? 'No Matching Cases Found' : `No ${specialtyName} Cases Available`}\r\n          </h3>\r\n          <p className=\"text-gray-600 mb-4\">\r\n            {hasActiveFilters() \r\n              ? `No cases found matching your filters in ${specialtyName}. Try adjusting your search criteria.`\r\n              : `There are currently no cases available in ${specialtyName}.`\r\n            }\r\n          </p>\r\n          <div className=\"flex justify-center space-x-3\">\r\n            {hasActiveFilters() && (\r\n              <button\r\n                onClick={clearAllFilters}\r\n                className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition-colors\"\r\n              >\r\n                Clear All Filters\r\n              </button>\r\n            )}\r\n            <Link\r\n              to=\"/browse-cases\"\r\n              className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors\"\r\n            >\r\n              Browse Other Specialties\r\n            </Link>\r\n            <Link\r\n              to=\"/simulation\"\r\n              className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition-colors\"\r\n            >\r\n              View All Cases\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* Cases count and pagination info */}\r\n          <div className=\"mb-4 flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600\">\r\n                {hasActiveFilters() \r\n                  ? `Found ${casesResponse.totalCases} case${casesResponse.totalCases !== 1 ? 's' : ''} matching your filters in ${specialtyName}`\r\n                  : `${casesResponse.totalCases} case${casesResponse.totalCases !== 1 ? 's' : ''} available in ${specialtyName}`\r\n                }\r\n              </p>\r\n              {casesResponse.totalPages > 1 && (\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  Page {casesResponse.currentPage} of {casesResponse.totalPages}\r\n                  {casesResponse.totalCases > 0 && (\r\n                    <span> • Showing {((casesResponse.currentPage - 1) * filters.limit) + 1}-{Math.min(casesResponse.currentPage * filters.limit, casesResponse.totalCases)} of {casesResponse.totalCases}</span>\r\n                  )}\r\n                </p>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Cases per page selector */}\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"text-sm text-gray-600\">Show:</span>\r\n              <select\r\n                value={filters.limit}\r\n                onChange={(e) => handleFilterChange({ limit: parseInt(e.target.value) })}\r\n                className=\"px-2 py-1 border border-gray-300 rounded text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value={6}>6</option>\r\n                <option value={12}>12</option>\r\n                <option value={24}>24</option>\r\n                <option value={48}>48</option>\r\n              </select>\r\n              <span className=\"text-sm text-gray-600\">per page</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Cases grid */}\r\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {cases.map((case_) => (\r\n              <div key={case_.id} className=\"bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow\">\r\n                <div className=\"mb-4\">\r\n                  <div className=\"flex justify-between items-start mb-2\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 line-clamp-2\">\r\n                      {case_.title}\r\n                    </h3>\r\n                  </div>\r\n                  <p className=\"text-gray-600 text-sm line-clamp-3 mb-3\">\r\n                    {case_.description}\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"space-y-2 mb-4 text-sm\">\r\n                  {case_.specialty && (\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-500\">Specialty:</span>\r\n                      <span className=\"text-gray-900\">{case_.specialty}</span>\r\n                    </div>\r\n                  )}\r\n\r\n                  {case_.patient_age && case_.patient_gender && (\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-500\">Patient:</span>\r\n                      <span className=\"text-gray-900\">{case_.patient_age}y {case_.patient_gender}</span>\r\n                    </div>\r\n                  )}\r\n                  {case_.chief_complaint && (\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-500\">Chief Complaint:</span>\r\n                      <span className=\"text-gray-900 text-right\">{case_.chief_complaint}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <button\r\n                  onClick={() => handleStartSimulation(case_)}\r\n                  disabled={startingSimulation}\r\n                  className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 transition-colors\"\r\n                >\r\n                  {startingSimulation ? 'Starting...' : 'Start Simulation'}\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Pagination Controls */}\r\n          {casesResponse.totalPages > 1 && (\r\n            <div className=\"mt-8 flex items-center justify-center space-x-2\">\r\n              <button\r\n                onClick={() => handlePageChange(casesResponse.currentPage - 1)}\r\n                disabled={!casesResponse.hasPrevPage}\r\n                className=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                Previous\r\n              </button>\r\n              \r\n              {/* Page numbers */}\r\n              <div className=\"flex space-x-1\">\r\n                {Array.from({ length: Math.min(5, casesResponse.totalPages) }, (_, i) => {\r\n                  let pageNum;\r\n                  if (casesResponse.totalPages <= 5) {\r\n                    pageNum = i + 1;\r\n                  } else if (casesResponse.currentPage <= 3) {\r\n                    pageNum = i + 1;\r\n                  } else if (casesResponse.currentPage >= casesResponse.totalPages - 2) {\r\n                    pageNum = casesResponse.totalPages - 4 + i;\r\n                  } else {\r\n                    pageNum = casesResponse.currentPage - 2 + i;\r\n                  }\r\n                  \r\n                  return (\r\n                    <button\r\n                      key={pageNum}\r\n                      onClick={() => handlePageChange(pageNum)}\r\n                      className={`px-3 py-2 text-sm font-medium rounded-md ${\r\n                        pageNum === casesResponse.currentPage\r\n                          ? 'bg-blue-600 text-white'\r\n                          : 'text-gray-500 bg-white border border-gray-300 hover:bg-gray-50'\r\n                      }`}\r\n                    >\r\n                      {pageNum}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n              \r\n              <button\r\n                onClick={() => handlePageChange(casesResponse.currentPage + 1)}\r\n                disabled={!casesResponse.hasNextPage}\r\n                className=\"px-3 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Quick Navigation */}\r\n      <div className=\"mt-12 bg-gray-50 rounded-lg p-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Quick Navigation</h3>\r\n        <div className=\"flex flex-wrap gap-3\">\r\n          <Link\r\n            to=\"/simulation\"\r\n            className=\"px-4 py-2 bg-white text-gray-700 rounded-lg border border-gray-300 hover:border-gray-400 transition-colors text-sm\"\r\n          >\r\n            Browse All Cases\r\n          </Link>\r\n          <Link\r\n            to=\"/browse-cases\"\r\n            className=\"px-4 py-2 bg-white text-gray-700 rounded-lg border border-gray-300 hover:border-gray-400 transition-colors text-sm\"\r\n          >\r\n            Other Specialties\r\n          </Link>\r\n          <Link\r\n            to=\"/dashboard\"\r\n            className=\"px-4 py-2 bg-white text-gray-700 rounded-lg border border-gray-300 hover:border-gray-400 transition-colors text-sm\"\r\n          >\r\n            Back to Dashboard\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nSpecialtyCasePage.displayName = 'SpecialtyCasePage';\r\n\r\nexport default SpecialtyCasePage;"],"names":["useOptimizedSpecialtyPage","specialtySlug","useParams","addNotification","useNotification","pageLoadEndRef","useRef","abortControllerRef","lastFetchParamsRef","useEffect","trackComponentRender","cases","setCases","useState","loading","setLoading","startingSimulation","setStartingSimulation","error","setError","specialtyName","useMemo","specialtyCache","slugToSpecialty","filters","setFilters","casesResponse","setCasesResponse","handleFilterChange","useCallback","newFilters","prev","handlePageChange","newPage","clearAllFilters","hasActiveFilters","fetchSpecialtyCases","showNotification","endApiCall","trackApiCall","isValidSpecialtySlug","apiFilters","cacheKey","cleanFilters","_","value","response","api","_a","handleStartSimulation","case_","retryFetch","trackPageLoad","timer","Breadcrumb","items","className","jsx","item","index","jsxs","React","Link","SpecialtyNavigation","showCaseCounts","maxVisible","specialtyRoutes","useSpecialtyContext","showAll","setShowAll","i","visibleRoutes","hasMore","route","Fragment","SpecialtyHeader","caseCount","showNavigation","showBreadcrumbs","currentRoute","displayCaseCount","breadcrumbItems","SpecialtyCasePage","memo","navigate","useNavigate","optimizedStartSimulation","showAdvancedFilters","setShowAdvancedFilters","retryCount","setRetryCount","SkeletonSpecialtyPage","e","pageNum"],"mappings":"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"}